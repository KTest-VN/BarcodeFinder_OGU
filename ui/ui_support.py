#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    May 16, 2022 10:37:31 AM CST  platform: Darwin
#    Jun 02, 2022 03:28:00 PM CST  platform: Darwin

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import ui

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol('WM_DELETE_WINDOW', root.destroy)
    # Creates a toplevel widget.
    global _top44, _w44
    _top44 = root
    _w44 = ui.main(_top44)
    # Creates a toplevel widget.
    global _top45, _w45
    _top45 = tk.Toplevel(root)
    _w45 = ui.gb2fasta(_top45)
    # Creates a toplevel widget.
    global _top46, _w46
    _top46 = tk.Toplevel(root)
    _w46 = ui.evaluate(_top46)
    # Creates a toplevel widget.
    global _top47, _w47
    _top47 = tk.Toplevel(root)
    _w47 = ui.primer(_top47)
    # Creates a toplevel widget.
    global _top48, _w48
    _top48 = tk.Toplevel(root)
    _w48 = ui.log(_top48)
    root.mainloop()

def open_file(entry, single=True, entry2=None, title=''):
    """
    Set title, fill entry 1, empty entry 2.
    """
    def func():
        if single:
            a = filedialog.askopenfilename(title=title)
        else:
            a = filedialog.askopenfilenames(title=title)
        entry.delete(0, 'end')
        entry.insert(0, a)
        if entry2 is not None:
            entry2.delete(0, 'end')
    return func
def run_evaluate(*args):
    print('ui_support.run_evaluate')
    for arg in args:
        print('another arg:', arg)
    sys.stdout.flush()

def run_gb2fasta(*args):
    print('ui_support.run_gb2fasta')
    for arg in args:
        print('another arg:', arg)
    sys.stdout.flush()

def run_help(*args):
    print('ui_support.run_help')
    for arg in args:
        print('another arg:', arg)
    sys.stdout.flush()

def run_primer(*args):
    print('ui_support.run_primer')
    for arg in args:
        print('another arg:', arg)
    sys.stdout.flush()

if __name__ == '__main__':
    ui.start_up()





